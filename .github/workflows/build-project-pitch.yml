name: Build Project Pitch
on:
  issues:
    types: [labeled]
jobs:
  compile-form:
    if:
      contains(github.event.issue.labels.*.name, 'approved') &&
      contains(join(github.event.issue.labels.*.name, ', '), 'year/') &&
      contains(github.event.issue.labels.*.name, 'pitch') &&
      ! contains(github.event.issue.labels.*.name, 'triage')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Parse issue
        id: parse
        uses: onmax/issue-form-parser@v1.4
        with:
          issue_number: ${{ github.event.issue.number }}
      - name: Get year
        run: >
          echo "year=$(echo -e "${{ join(github.event.issue.labels.*.name, '\n') }}" |
            grep 'year/' |
            awk -F'/' '{print $2}')" >> "$GITHUB_ENV"
      - name: Validate year
        run: >
          [[ "$year" =~ ^[[:digit:]]{4}$ ]] || (
            echo "$year" is invalid >&2 && false
          )
      - name: Parse organizers
        run: >
          echo "organizers=$(
            echo "${{ fromJson(steps.parse.outputs.payload)['Project Leads']}}" |
              sed -E 's/([^(]+)\s\(\s*@?([a-zA-Z0-9\-]+)\s*\)/{"name": "\1", "github": "\2"}/' |
              paste -d',' -s |
              sed -E 's/^(.*)$/[\1]/'
          )" >> "$GITHUB_ENV"
      - name: Add data to config
        uses: mikefarah/yq@master
        with:
          cmd: >
            yq -i '.projects['"$year"'] += [
              {
                "title": ${{ toJson(fromJson(steps.parse.outputs.payload)['Title']) }},
                "description": ${{ toJson(fromJson(steps.parse.outputs.payload)['Description'])}},
                "organizers": '"$organizers"'
              }
            ]' config.yaml

      - name: Format yaml output
        uses: actionsx/prettier@v2
        with:
          args: --no-config --write config.yaml
      - name: Create PR
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: >
            Add Project: ${{ fromJson(steps.parse.outputs.payload)['Title']}}
          branch: pitch/${{ github.event.issue.number }}
          title: >
            Add Project: ${{ fromJson(steps.parse.outputs.payload)['Title']}}